/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views.cliente;

import contas.Conta;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import jsonOperations.Leitura;
import usuarios.Administrador;
import usuarios.Cliente;
import usuarios.Funcionario;
import views.AdministradorUI;
import views.ClienteUI;
import views.ContaUI;
import views.FuncionarioUI;
import views.administrador.AlterarConta;

/**
 * Faz a pesquisa, validacao e redirecionamento da conta pra outras interfaces 
 * como:
 * <ul>
 * <li> ClienteUI
 * <li> FuncionarioUI
 * <li> AdministradorUI
 * <li> AlterarConta
 * </ul>
 * 
 * @author Walter
 */
public class ValidarConta extends javax.swing.JFrame {

    private String baseContas = "./src/baseDeDados/listaContas.json";
    private List<Conta> contasCliente = new ArrayList<>();
    private Conta contaSelecionada = null;
    private ClienteUI clienteUI = null;
    private FuncionarioUI funcionarioUI = null;
    private AdministradorUI administradorUI = null;
    private AlterarConta alterarConta = null;
    private Cliente clienteLogado = null;
    private Funcionario funcionarioLogado = null;
    private Administrador administradorLogado = null;

    public AdministradorUI getAdministradorUI() {
        return administradorUI;
    }

    public void setAdministradorUI(AdministradorUI administradorUI) {
        this.administradorUI = administradorUI;
    }

    public FuncionarioUI getFuncionarioUI() {
        return funcionarioUI;
    }

    public void setFuncionarioUI(FuncionarioUI funcionarioUI) {
        this.funcionarioUI = funcionarioUI;
    }

    public Cliente getClienteLogado() {
        return clienteLogado;
    }

    public void setClienteLogado(Cliente clienteLogado) {
        this.clienteLogado = clienteLogado;
    }

    public ClienteUI getClienteUI() {
        return clienteUI;
    }

    public void setClienteUI(ClienteUI clienteUI) {
        this.clienteUI = clienteUI;
    }

    public List<Conta> getContasCliente() {
        return contasCliente;
    }

    public AlterarConta getAlterarConta() {
        return alterarConta;
    }

    public void setAlterarConta(AlterarConta alterarConta) {
        this.alterarConta = alterarConta;
    }

    public Conta getContaSelecionada() {
        return contaSelecionada;
    }

    public void setContaSelecionada(Conta contaSelecionada) {
        this.contaSelecionada = contaSelecionada;
    }

    public Administrador getAdministradorLogado() {
        return administradorLogado;
    }

    public void setAdministradorLogado(Administrador administradorLogado) {
        this.administradorLogado = administradorLogado;
    }

    public String getBaseContas() {
        return baseContas;
    }

    public void setBaseContas(String baseContas) {
        this.baseContas = baseContas;
    }

    public Funcionario getFuncionarioLogado() {
        return funcionarioLogado;
    }

    public void setFuncionarioLogado(Funcionario funcionarioLogado) {
        this.funcionarioLogado = funcionarioLogado;
    }
    
    /**
     * Metodo responsavel por pesquisar e atribuir um objeto do tipo Conta para
     * o atributo contaSelecionada.
     * 
     * @param numeroConta
     * @param idConta 
     */
    private void setPesquisarConta(int numeroConta, int idConta) {
        for (Conta conta : contasCliente) {
            if (conta.getNumeroConta() == numeroConta && conta.getIdConta() == idConta) {
                contaSelecionada = conta;
                break;
            }
        }
    }

    /**
     * Metodo responsavel por preencher a <code> List &lt; Integer &gt; contasAssociadas </code>
     * 
     * @param contasAssociadas 
     */
    public void setContasCliente(List<Integer> contasAssociadas) {
        List<Conta> listaContas = Leitura.lerContas(baseContas);
        for (Integer idConta : contasAssociadas) {
            for (Conta conta : listaContas) {
                if (conta.getIdConta() == idConta) {
                    contasCliente.add(conta);
                }
            }
        }
    }

    /**
     * Creates new form ValidarConta
     */
    public ValidarConta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnIR = new javax.swing.JButton();
        CaixaID = new javax.swing.JTextField();
        CaixaNumeroConta = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(400, 180));
        setMaximumSize(new java.awt.Dimension(700, 400));
        setMinimumSize(new java.awt.Dimension(700, 400));
        setPreferredSize(new java.awt.Dimension(700, 400));

        jPanel1.setBackground(new java.awt.Color(2, 78, 148));
        jPanel1.setMaximumSize(new java.awt.Dimension(700, 400));
        jPanel1.setMinimumSize(new java.awt.Dimension(700, 400));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 400));

        btnIR.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnIR.setForeground(new java.awt.Color(2, 78, 148));
        btnIR.setText("IR");
        btnIR.setMaximumSize(new java.awt.Dimension(92, 23));
        btnIR.setMinimumSize(new java.awt.Dimension(92, 23));
        btnIR.setPreferredSize(new java.awt.Dimension(92, 23));
        btnIR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnIRMouseClicked(evt);
            }
        });
        btnIR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIRActionPerformed(evt);
            }
        });

        CaixaID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CaixaID.setForeground(new java.awt.Color(2, 78, 148));
        CaixaID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CaixaIDActionPerformed(evt);
            }
        });

        CaixaNumeroConta.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CaixaNumeroConta.setForeground(new java.awt.Color(2, 78, 148));
        CaixaNumeroConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CaixaNumeroContaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("NÂ° da conta");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ID da conta");

        btnCancelar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(2, 78, 148));
        btnCancelar.setText("Cancelar");
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
        });
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(246, Short.MAX_VALUE)
                .addComponent(btnIR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107)
                .addComponent(btnCancelar)
                .addGap(163, 163, 163))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CaixaID, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                    .addComponent(CaixaNumeroConta))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(147, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(CaixaID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CaixaNumeroConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar)
                    .addComponent(btnIR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(97, 97, 97))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CaixaNumeroContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CaixaNumeroContaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CaixaNumeroContaActionPerformed

    private void CaixaIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CaixaIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CaixaIDActionPerformed

    private void btnIRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIRActionPerformed

    }//GEN-LAST:event_btnIRActionPerformed

    private void btnIRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIRMouseClicked
        int numeroConta = Integer.parseInt(this.CaixaNumeroConta.getText());
        int idConta = Integer.parseInt(this.CaixaID.getText());

        if (alterarConta != null) { // se a janela alterarConta for passada para essa classe
            contasCliente = Leitura.lerContas(baseContas);
            setPesquisarConta(numeroConta, idConta);
            alterarConta.setContaSelecionada(contaSelecionada);
            alterarConta.setAdministradorLogado(administradorLogado);
            alterarConta.setBaseContas(baseContas);
            alterarConta.setVisible(true);
            alterarConta.setShowDados();
            administradorUI.setAlterarConta(alterarConta);
            this.dispose();
        } else {

            setPesquisarConta(numeroConta, idConta);
            if (contaSelecionada == null) {
                JOptionPane.showMessageDialog(null, "Dados incorretos!");
            } else {
                
                ContaUI show = new ContaUI(); // mundando para a interface conta
                if (clienteLogado != null){
                    show.setClienteLogado(clienteLogado);
                }else if(funcionarioLogado != null){
                    show.setFuncionarioLogado(funcionarioLogado);
                }else if (administradorLogado != null){
                    show.setAdministradorLogado(administradorLogado);
                }
                show.setContaSelecionada(contaSelecionada);
                show.setListaContas(contasCliente);
                show.setVisible(true);
                
                if (clienteUI != null) { // ocultando a janela anteriror que for != null
                    show.setClienteUI(clienteUI);
                    clienteUI.setVisible(false);
                } else if (funcionarioUI != null) {
                    show.setFuncionarioUI(funcionarioUI);
                    funcionarioUI.setVisible(false);
                } else if (administradorUI != null) {
                    show.setAdministradorUI(administradorUI);
                    administradorUI.setVisible(false);
                }
                this.dispose();
            }
        }
    }//GEN-LAST:event_btnIRMouseClicked

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed

        this.dispose();

    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ValidarConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ValidarConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ValidarConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ValidarConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ValidarConta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CaixaID;
    private javax.swing.JTextField CaixaNumeroConta;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnIR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
